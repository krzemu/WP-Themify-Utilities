class TransparentHeader { constructor({ stickyHeaderElement: e, StaticHeaderElement: t, scrollYChangePos: s = 300 }) { this.nav = { sticky: e, static: t }, this.scrollYChangePos = s, this.setUpHeaders(), this.checkActiveHeader(), this.windowScrollHander() } setUpHeaders() { let { nav: e } = this; this.setHeadersStyle(e.sticky, "fixed"), this.setHeadersStyle(e.static, "absolute") } toggleHeader(e) { let { nav: t } = this; for (let s in t) e === s ? (this.showHeader(t[s]), this.activeHeader = s) : this.hideHeader(t[s]) } checkActiveHeader() { let { checkWindowPosition: e, scrollYChangePos: t } = this; e() > t ? this.toggleHeader("sticky") : this.toggleHeader("static") } windowScrollHander() { window.addEventListener("scroll", () => this.checkActiveHeader()) } checkWindowPosition() { return window.scrollY } setHeadersStyle(e, t) { e.style.position = t, e.style.top = "0", e.style.left = "0", e.style.right = "0", e.style.width = "100%", e.style.transition = ".3s ease-out", e.style.zIndex = "999" } hideHeader(e) { e.style.display = "none", e.style.opacity = "0", e.style.transform = "translateY(-100%)" } showHeader(e) { e.style.display = "block", setTimeout(() => { e.style.opacity = "1", e.style.transform = "translateY(0)", e.style.width = "100%" }, 10) } }
const transparentHeader = new TransparentHeader({ StaticHeaderElement: document.querySelector(".static-nav"), stickyHeaderElement: document.querySelector(".sticky-nav") });